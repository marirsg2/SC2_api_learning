

GOAL: to use a basic RL agent to complete a minigame, and watch it get better from initial NN output actions
to the end. MAYBE see examples to do so. Tensorflow or KERAS!
    MY idea: state -> policy ->(output)goal-state. says "go to this state".
            Then input both current and target state into a simple-dense NN to get the next action.
            LATER PLANNING ASPECT:Maybe have a simulator that does next-n actions to check? this is the MODEL of the world ?
--------------

1) Try to control the marines separately, and do no-op while they are moving (can you get that information, YES target info)
2) Try to access the info from different screens, and if you can find the BUILDING TYPES.
3) LAST, import your own map where the scv collects minerals from bottom left and deposits in the top right with a fenced enemy
    in the middle.


In actions.py
you have an informative code with some lists for action types


NEXT:  -----------  SEE THE ACTIONS IN THE LIST AND XLATE THEM