
===============================================================================
PEOPLE

Talk to the people on
https://www.reddit.com/r/sc2ai/comments/6t4xo8/api_documentation_for_pysc2/


===============================================================================
SC2 API FROM BLIZZARD:
https://github.com/deepmind/pysc2/blob/master/docs/environment.md
https://github.com/Blizzard/s2client-api/tree/master/docs
https://github.com/Blizzard/s2client-proto/blob/master/docs/protocol.md

1)  The lower left of the map is (0, 0).

===============================================================================
ACTION DETAILS:

https://github.com/Blizzard/s2client-proto/blob/master/docs/protocol.md

May need to read the SC2 API from blizzard to know the details

===============================================================================
MINIMAP:
1)There is only ONE minimap !! all the info is from it. YES , there are DIMENSIONS in the order that it appears in
in features.py, you can see the information extractable from either the "SCREEN" or "MINIMAP"
3) The "colors" will give you the categorical values for each of the cases.

===============================================================================
OBSERVATION DATA STRUCT
(sc2_env.py has the code)
1) the info returned from env.step has info in the order of steptype, reward, discount factor (1.0 means reward backchannels fully, undiscounted),
    and the observations
    Can be accessed by index or key words, ('step_type', 'reward', 'discount', 'observation')

2) under the data struct returned from env.step(), the "observation" field is a dict with keys
            "screen": (len(SCREEN_FEATURES),
                   self._screen_size_px.y,
                   self._screen_size_px.x),
        "minimap": (len(MINIMAP_FEATURES),
                    self._minimap_size_px.y,
                    self._minimap_size_px.x),
        "player": (11,),
        "game_loop": (1,),
        "score_cumulative": (13,),
        "available_actions": (0,),
        "single_select": (0, 7),  # Actually only (n, 7) for n in (0, 1)
        "multi_select": (0, 7),
        "cargo": (0, 7),
        "cargo_slots_available": (1,),
        "build_queue": (0, 7),
        "control_groups": (10, 2),
=====================================================

DEFINING ACTIONS

_ATTACK_SCREEN = actions.FUNCTIONS.Attack_screen.id
_SELECT_ARMY = actions.FUNCTIONS.select_army.id

===============================================================================
READING THE SCREEN
1) To get the readout of the screen as an array.
        obs.observation["screen"][SC2_game_defs._PLAYER_RELATIVE]
        the output is returned TOP-BOTTOM, LEFT-RIGHT
===============================================================================
IMPORTANT NUANCES OF GAME DESC

_PLAYER_NEUTRAL = 3  # beacon/minerals

===============================================================================
ACTIONS

0) there are some defines that are useful to use, and put in the file "sc2_game_Defs"

(actions.py has the list)
eg:
    Function.ui_func(0, "no_op", no_op),
    Function.ui_func(1, "move_camera", move_camera),
    Function.ui_func(2, "select_point", select_point),
    Function.ui_func(3, "select_rect", select_rect),

2) Using actions
    \\ if _MOVE_SCREEN in obs.observation["available_actions"]: \\


===============================================================================